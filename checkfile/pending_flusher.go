///////////////////////////////////////////////////////////////////////////////
// Package: checkfile
// –ö–ª–∞—Å: PendingFlusher
// –û–ø–∏—Å:
//   –ö–ª–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ —ñ–∑ –±—É—Ñ–µ—Ä–∞
//   (PendingFilesBuffer), –∫–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü–µ—Ä–µ–≤—ñ—Ä—è—î –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å
//   —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é HTTP-–∑–∞–ø–∏—Ç—É –¥–æ /ping. –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π ‚Äî
//   –Ω–∞–¥—Å–∏–ª–∞—î —Ñ–∞–π–ª–∏ —É FileSender.
//
//   –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —É —Ñ–æ–Ω–æ–≤—ñ–π –≥–æ—Ä—É—Ç–∏–Ω—ñ —ñ –∑–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è, –∫–æ–ª–∏ context –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è.
///////////////////////////////////////////////////////////////////////////////

package checkfile

import (
	"Anthophila/logging"
	sm "Anthophila/struct_modul"
	"net/http"
	"strconv"
	"sync"
	"time"
)

// /////////////////////////////////////////////////////////////////////////////
// –°—Ç—Ä—É–∫—Ç—É—Ä–∞: PendingFlusher
//
// –ü–æ–ª—è:
// - ServerURL: –ø–æ–≤–Ω–∞ –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞, –≤–∫–ª—é—á–Ω–æ –∑ –ø–æ—Ä—Ç–æ–º, –±–µ–∑ "/ping"
// - PendingBuf: –±—É—Ñ–µ—Ä —Ñ–∞–π–ª—ñ–≤, —è–∫—ñ —â–µ –Ω–µ –±—É–ª–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ
// - FileChan: –∫–∞–Ω–∞–ª, —É —è–∫–∏–π –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è —à–ª—è—Ö–∏ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è FileSender
// - Logger: —Å–µ—Ä–≤—ñ—Å –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
// - Mutex: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –±—É—Ñ–µ—Ä–∞ –≤ –±–∞–≥–∞—Ç—å–æ—Ö –ø–æ—Ç–æ–∫–∞—Ö
// - ContextDone: —Å–∏–≥–Ω–∞–ª –≤—ñ–¥ context.Context –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (–∑—É–ø–∏–Ω–∫–∞ –≥–æ—Ä—É—Ç–∏–Ω–∏)
// - WaitGroup: –¥–æ–∑–≤–æ–ª—è—î –¥–æ—á–µ–∫–∞—Ç–∏—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ü—ñ—î—ó –≥–æ—Ä—É—Ç–∏–Ω–∏
// /////////////////////////////////////////////////////////////////////////////
type PendingFlusher struct {
	ServerURL   string                 // URL –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ "/ping"
	PendingBuf  *PendingFilesBuffer    // –ë—É—Ñ–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
	FileChan    chan<- string          // –ö–∞–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ —Ñ–∞–π–ª—ñ–≤ –¥–æ FileSender
	Logger      *logging.LoggerService // –°–µ—Ä–≤—ñ—Å –ª–æ–≥—É–≤–∞–Ω–Ω—è
	Mutex       *sync.Mutex            // –ú º—é—Ç–µ–∫—Å –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –±—É—Ñ–µ—Ä–∞
	ContextDone <-chan struct{}        // –ö–∞–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (–≤—ñ–¥ context)
	WaitGroup   *sync.WaitGroup        // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≥–æ—Ä—É—Ç–∏–Ω
}

// /////////////////////////////////////////////////////////////////////////////
// –§—É–Ω–∫—Ü—ñ—è: NewPendingFlusher
// –°—Ç–≤–æ—Ä—é—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç PendingFlusher.
//
// –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
// - serverURL: –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "http://192.168.1.10:8020"
// - pb: –≤–∫–∞–∑—ñ–≤–Ω–∏–∫ –Ω–∞ –±—É—Ñ–µ—Ä –∑ —Ñ–∞–π–ª–∞–º–∏
// - fileChan: –∫–∞–Ω–∞–ª, —á–µ—Ä–µ–∑ —è–∫–∏–π –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è —Ñ–∞–π–ª–∏ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
// - logger: —Å–µ—Ä–≤—ñ—Å –ª–æ–≥—É–≤–∞–Ω–Ω—è
// - mutex: –º º—é—Ç–µ–∫—Å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –¥–æ—Å—Ç—É–ø—É –¥–æ –±—É—Ñ–µ—Ä–∞
// - ctxDone: –∫–∞–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (–∑–∞–∑–≤–∏—á–∞–π ctx.Done())
// - wg: –≤–∫–∞–∑—ñ–≤–Ω–∏–∫ –Ω–∞ –∑–∞–≥–∞–ª—å–Ω–∏–π WaitGroup
// /////////////////////////////////////////////////////////////////////////////
func NewPendingFlusher(
	serverURL string,
	pb *PendingFilesBuffer,
	fileChan chan<- string,
	logger *logging.LoggerService,
	mutex *sync.Mutex,
	ctxDone <-chan struct{},
	wg *sync.WaitGroup,
) *PendingFlusher {
	return &PendingFlusher{
		ServerURL:   serverURL,
		PendingBuf:  pb,
		FileChan:    fileChan,
		Logger:      logger,
		Mutex:       mutex,
		ContextDone: ctxDone,
		WaitGroup:   wg,
	}
}

// /////////////////////////////////////////////////////////////////////////////
// –ú–µ—Ç–æ–¥: Start
// –ó–∞–ø—É—Å–∫–∞—î –≥–æ—Ä—É—Ç–∏–Ω—É, —è–∫–∞ –∫–æ–∂–Ω—ñ 15 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–≤—ñ—Ä—è—î:
// 1. –ß–∏ —î —Ñ–∞–π–ª–∏ —É –±—É—Ñ–µ—Ä—ñ.
// 2. –ß–∏ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π (HTTP GET –Ω–∞ /ping).
// –Ø–∫—â–æ —Ç–∞–∫ ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î —Ñ–∞–π–ª–∏ –∑ –±—É—Ñ–µ—Ä–∞ –≤ FileSender —á–µ—Ä–µ–∑ FileChan.
// –ó–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è, –∫–æ–ª–∏ ContextDone –∑–∞–∫—Ä–∏—î—Ç—å—Å—è.
// /////////////////////////////////////////////////////////////////////////////
func (pf *PendingFlusher) Start() {
	pf.WaitGroup.Add(1)
	go func() {
		defer pf.WaitGroup.Done()

		pf.Logger.LogInfo("üåê Running Pending Flusher", "Start Pending")

		for {
			select {
			case <-pf.ContextDone:
				pf.Logger.LogInfo("üåê Pending Flusher Completion", "Complet Pending")
				return

			default:
				// –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ –∑ –±—É—Ñ–µ—Ä–∞ (–∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è–º)
				pf.Mutex.Lock()
				files := pf.PendingBuf.GetAllFiles()
				pf.Mutex.Unlock()

				if len(files) > 0 {
					// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
					resp, err := http.Get(pf.ServerURL + "/ping")
					if err == nil {
						defer resp.Body.Close() // –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
					}

					if err == nil && resp.StatusCode == 200 {
						// –ö–æ–ø—ñ—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
						pf.Mutex.Lock()
						pendingFiles := make([]sm.EncryptedFile, len(files))
						copy(pendingFiles, files)
						pf.Mutex.Unlock()

						// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–∞–π–ª–∏ –æ–¥–∏–Ω –∑–∞ –æ–¥–Ω–∏–º
						for _, file := range pendingFiles {
							pf.Logger.LogInfo("‚û°Ô∏è Sending from buffer to FileSender", file.EncryptedPath)
							pf.FileChan <- file.EncryptedPath
						}

					} else {
						// –õ–æ–≥ –ø–æ–º–∏–ª–∫–∏
						if err != nil {
							pf.Logger.LogError("üåê Server unavailable", err.Error())
						} else {
							pf.Logger.LogError("üåê Server not responding", "error code "+strconv.Itoa(resp.StatusCode))
						}
					}

					time.Sleep(15 * time.Second) // –ó–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏

				} else {
					time.Sleep(5 * time.Second) // –ú–µ–Ω—à–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª, —è–∫—â–æ —Ñ–∞–π–ª—ñ–≤ –Ω–µ–º–∞—î
				}
			}
		}
	}()
}
